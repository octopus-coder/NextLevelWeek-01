{"ast":null,"code":"var _jsxFileName = \"/Users/luisenriqueg/Documents/Learning/RocketSeat/NextLevelWeek/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport logo from \"../../assets/logo.svg\";\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport './styles.css';\nimport axios from 'axios';\nimport Dropzone from '../../components/Dropzone';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [UFs, setUFs] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUF, setSelectedUF] = useState('0');\n  const [cities, setCities] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedFile, setSelectedFile] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.watchPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    const fetchItems = async () => {\n      const {\n        data\n      } = await api.get('/items');\n      setItems(data);\n    };\n\n    fetchItems();\n  }, []);\n  useEffect(() => {\n    const fetchUFs = async () => {\n      const {\n        data\n      } = await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\n      const ufInitials = data.map(uf => uf.sigla);\n      setUFs(ufInitials);\n    };\n\n    fetchUFs();\n  }, []);\n  useEffect(() => {\n    const fetchCities = async () => {\n      const {\n        data\n      } = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`);\n      const cities_data = data.map(city => {\n        return {\n          id: city.id,\n          name: city.nome\n        };\n      });\n      setCities(cities_data);\n    };\n\n    fetchCities();\n  }, [selectedUF]);\n\n  function handleSelectUF(event) {\n    setSelectedUF(event.target.value);\n  }\n\n  function handleSelectCity(event) {\n    setSelectedCity(event.target.value);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUF;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n\n    if (selectedFile) {\n      data.append('image', selectedFile);\n    }\n\n    await api.post('points', data);\n    alert('Collection Point Created');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"eCollect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), \"Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Register Collection Point\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"Data\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Name of Org\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"WhatsApp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Select Address from the map\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"State (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUF,\n    onChange: handleSelectUF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Select UF\"), UFs.map(UF => /*#__PURE__*/React.createElement(\"option\", {\n    key: UF,\n    value: UF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, UF)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Select a City\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city.id,\n    value: city.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, city.name)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"Collection Items\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Select at least one item below\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      onClick: () => handleSelectItem(item.id),\n      className: selectedItems.includes(item.id) ? 'selected' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.image_url,\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, item.title));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, \"Register Collection Point\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/luisenriqueg/Documents/Learning/RocketSeat/NextLevelWeek/web/src/pages/CreatePoint/index.tsx"],"names":["React","useState","useEffect","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","api","axios","Dropzone","CreatePoint","items","setItems","UFs","setUFs","initialPosition","setInitialPosition","formData","setFormData","name","email","whatsapp","selectedUF","setSelectedUF","cities","setCities","selectedItems","setSelectedItems","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","selectedFile","setSelectedFile","history","navigator","geolocation","watchPosition","position","latitude","longitude","coords","fetchItems","data","get","fetchUFs","ufInitials","map","uf","sigla","fetchCities","cities_data","city","id","nome","handleSelectUF","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","FormData","append","String","join","post","alert","push","logo","UF","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport logo from '../../assets/logo.svg';\nimport { Map, TileLayer, Marker } from 'react-leaflet'\nimport { LeafletMouseEvent } from 'leaflet';\nimport api from '../../services/api';\nimport './styles.css';\nimport axios from 'axios';\nimport Dropzone from '../../components/Dropzone';\n\ninterface Item {\n  id: number,\n  title: string;\n  image_url: string;\n}\n\ninterface IBGEUFResponse {\n  sigla: string;\n}\n\ninterface IBGECityResponse {\n  id: number;\n  nome: string;\n}\n\ninterface City {\n  id: number;\n  name: string;\n}\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [UFs, setUFs] = useState<string[]>([]);\n\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: '',\n  });\n\n  const [selectedUF, setSelectedUF] = useState('0');\n  const [cities, setCities] = useState<City[]>([]);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\n  const [selectedFile, setSelectedFile] = useState<File>();\n\n\n  const history = useHistory();\n\n  useEffect(() => {\n    navigator.geolocation.watchPosition(position => {\n      const { latitude, longitude } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    })\n  }, []);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const { data } = await api.get('/items');\n      setItems(data);\n    }\n    fetchItems();\n  }, []);\n\n  useEffect(() => {\n    const fetchUFs = async () => {\n      const { data } = await axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\n      const ufInitials = data.map((uf) => uf.sigla);\n      setUFs(ufInitials);\n    }\n    fetchUFs();\n  }, []);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      const { data } = await axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`);\n      const cities_data = data.map((city) => {\n        return {\n          id: city.id,\n          name: city.nome,\n        };\n      });\n      setCities(cities_data)\n    }\n    fetchCities();\n  }, [selectedUF]);\n\n  function handleSelectUF(event: ChangeEvent<HTMLSelectElement>) {\n    setSelectedUF(event.target.value);\n  }\n\n  function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n    setSelectedCity(event.target.value);\n  }\n\n  function handleMapClick(event: LeafletMouseEvent) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value })\n  }\n\n  function handleSelectItem(id: number) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n    if(alreadySelected >= 0){\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    }else{\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event: FormEvent){\n    event.preventDefault();\n\n    const {name, email, whatsapp} = formData;\n    const uf = selectedUF;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n\n    const data = new FormData();\n\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n\n    if(selectedFile){\n      data.append('image', selectedFile);\n    }\n\n    await api.post('points', data);\n    alert('Collection Point Created');\n\n    history.push('/');\n  }\n\n  return (\n    <div id=\"page-create-point\">\n      <header>\n        <img src={logo} alt=\"eCollect\" />\n        <Link to=\"/\">\n          <FiArrowLeft />\n          Home\n        </Link>\n      </header>\n\n      <form onSubmit={handleSubmit}>\n        <h1>Register Collection Point</h1>\n\n        <Dropzone onFileUploaded={setSelectedFile}/>\n\n        <fieldset>\n          <legend>\n            <h2>Data</h2>\n          </legend>\n\n          <div className=\"field\">\n            <label htmlFor=\"name\">Name of Org</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              onChange={handleInputChange}\n            />\n          </div>\n\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"whatsapp\">WhatsApp</label>\n              <input\n                type=\"text\"\n                name=\"whatsapp\"\n                id=\"whatsapp\"\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>Address</h2>\n            <span>Select Address from the map</span>\n          </legend>\n          <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={selectedPosition} />\n          </Map>\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"uf\">State (UF)</label>\n              <select\n                name=\"uf\"\n                id=\"uf\"\n                value={selectedUF}\n                onChange={handleSelectUF}\n              >\n                <option value=\"0\">Select UF</option>\n                {UFs.map(UF => (\n                  <option key={UF} value={UF} >{UF}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"city\">City</label>\n              <select\n                name=\"city\"\n                id=\"city\"\n                value={selectedCity}\n                onChange={handleSelectCity}\n              >\n                <option value=\"0\">Select a City</option>\n                {cities.map(city => (\n                  <option key={city.id} value={city.name}>{city.name}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>Collection Items</h2>\n            <span>Select at least one item below</span>\n          </legend>\n\n          <ul className=\"items-grid\">\n            {items.map((item) => {\n              return (\n                <li\n                  key={item.id}\n                  onClick={() => handleSelectItem(item.id)}\n                  className={selectedItems.includes(item.id) ? 'selected' : ''}\n                >\n                  <img src={item.image_url} alt={item.title} />\n                  <span>{item.title}</span>\n                </li>\n              );\n            })}\n          </ul>\n        </fieldset>\n        <button type=\"submit\">\n          Register Collection Point\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}